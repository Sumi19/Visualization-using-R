#scale_fill_brewer(palette="Set1")+ #Color it with the brewer fill pallette scale.
labs( x="Period", y = "Average Employed") +
scale_y_continuous(labels = scales::comma_format())+
coord_cartesian(ylim=c(0,1500000))+
labs(#title = " Manufacturing",
x=expression(" "),
y= "No.of Persons")+
facet_grid(~Region, scales = "free")+
theme06 +
theme(strip.background=element_rect(colour="black", fill="#FF9966"))
manemp
```{r , construction,  message=FALSE, warning=FALSE, fig.height=8, fig.width=6, fig.align='center'}
manemp<- original_data %>%
filter( Sector=="Manufacturing",
Region !="United States") %>%
group_by(Region,Year,Period) %>%
summarise(
AvgEmp = mean(Employees*1000),
n = n()
)%>%
drop_na()%>%
ggplot(aes(Period, AvgEmp, fill=Period))+
geom_col( aes(bin=0.4),position = "dodge",  alpha=0.6)+
#geom_smooth()+
scale_fill_manual(name='Period', values=c("#006600","#006699","#66CCCC",
"#FF6633", "#55DC33" , "brown"))+
#scale_fill_brewer(palette="Set1")+ #Color it with the brewer fill pallette scale.
labs( x="Period", y = "Average Employed") +
scale_y_continuous(labels = scales::comma_format())+
coord_cartesian(ylim=c(0,1500000))+
labs(#title = " Manufacturing",
x=expression(" "),
y= "No.of Persons")+
facet_grid(~Region, scales = "free")+
theme06 +
theme(strip.background=element_rect(colour="black", fill="#FF9966"))
manemp
theme05 <- theme(
plot.margin = unit(c(0,5,1,1),units="points"),
legend.position="bottom",
legend.box.spacing = unit(0.1, "cm"),
legend.title = element_text(color = "blue", size = 9),
legend.text = element_text(color = "red"),
plot.title = element_text(face = "bold", hjust = 0.5),
axis.text.x=element_blank(),
#legend.title=element_blank(),
axis.ticks.x=element_blank(),
panel.grid.major = element_blank(),
strip.background=element_rect(colour="black",
fill="#F6E4D1"),     #,"#fed776","#8ed2cd","c2ed98)
strip.text.x = element_text(size = 11, face="bold"),
panel.background = element_rect( color = 'brown'))
#panel.background = element_blank())+
emp1 <-
data %>%
select("Region","Year", "Period","Sector",
"Status","Persons") %>%
filter(Status=="Employed"  &
Region !="United States")%>%
group_by(Period, Region) %>%
summarise(AvgEmp = mean(Persons))%>%
drop_na() %>%
ggplot(aes(Period, AvgEmp, fill=Period))+
geom_col(width=0.5,position = "dodge",  alpha=0.5)+
geom_smooth()+
scale_fill_manual(name='Period', values=c("darkgreen","red","orangered",
"orange", "purple","hotpink"))+
scale_y_continuous(limits = c(0,18000000), labels = scales::comma_format())+
#scale_y_continuous(labels = scales::comma_format())+
labs(title = "Employed",
x=expression(" "),
y="No. of Persons")+
facet_wrap(~Region)+
theme05+
guides(colour = guide_legend(nrow = 1, byrow = T, override.aes=list(size=2),
direction = "horizontal",
title.position = "top",
label.theme = element_text(angle = 0)))
ggplotly(emp1)
c<- c("purple","hotpink","orangered", "orange")
#"#AF81C9", "#F89A7E", "#F2CA85", "#54D1Ff"
#scale_fill_brewer(palette="Set6")+ #Color it with the brewer fill pallette scale.
theme05 <- theme(
plot.margin = unit(c(0,5,1,1),units="points"),
legend.position="bottom",
legend.box.spacing = unit(0.1, "cm"),
legend.title = element_text(color = "blue", size = 9),
legend.text = element_text(color = "red"),
plot.title = element_text(face = "bold", hjust = 0.5),
axis.text.x=element_blank(),
#legend.title=element_blank(),
axis.ticks.x=element_blank(),
panel.grid.major = element_blank(),
strip.background=element_rect(colour="black",
fill="#F6E4D1"),     #,"#fed776","#8ed2cd","c2ed98)
strip.text.x = element_text(size = 11, face="bold"),
panel.background = element_rect( color = 'brown'))
#panel.background = element_blank())+
emp1 <-
data %>%
select("Region","Year", "Period","Sector",
"Status","Persons") %>%
filter(Status=="Employed"  &
Region !="United States")%>%
group_by(Period, Region) %>%
summarise(AvgEmp = mean(Persons))%>%
drop_na() %>%
ggplot(aes(Period, AvgEmp, fill=Period))+
geom_col(width=0.5,position = "dodge",  alpha=0.5)+
geom_smooth()+
scale_fill_manual(name='Period', values=c("darkgreen","red","orangered",
"orange", "purple","hotpink"))+
scale_y_continuous(limits = c(0,18000000), labels = scales::comma_format())+
#scale_y_continuous(labels = scales::comma_format())+
labs(title = "Employed",
x=expression(" "),
y="No. of Persons")+
facet_wrap(~Region)+
theme05+
guides(colour = guide_legend(nrow = 1, byrow = T, override.aes=list(size=2),
direction = "horizontal",
title.position = "top",
label.theme = element_text(angle = 0)))
emp1
c<- c("purple","hotpink","orangered", "orange")
#"#AF81C9", "#F89A7E", "#F2CA85", "#54D1Ff"
#scale_fill_brewer(palette="Set6")+ #Color it with the brewer fill pallette scale.
theme05 <- theme(
plot.margin = unit(c(0,5,1,1),units="points"),
legend.position="bottom",
legend.box.spacing = unit(0.1, "cm"),
legend.title = element_text(color = "blue", size = 9),
legend.text = element_text(color = "red"),
plot.title = element_text(face = "bold", hjust = 0.5),
axis.text.x=element_blank(),
#legend.title=element_blank(),
axis.ticks.x=element_blank(),
panel.grid.major = element_blank(),
strip.background=element_rect(colour="black",
fill="#F6E4D1"),     #,"#fed776","#8ed2cd","c2ed98)
strip.text.x = element_text(size = 11, face="bold"),
panel.background = element_rect( color = 'brown'))
#panel.background = element_blank())+
emp1 <-
data %>%
select("Region","Year", "Period","Sector",
"Status","Persons") %>%
filter(Status=="Employed"  &
Region !="United States")%>%
group_by(Period, Region) %>%
summarise(AvgEmp = mean(Persons))%>%
drop_na() %>%
ggplot(aes(Period, AvgEmp, fill=Period))+
geom_col(width=0.5,position = "dodge",  alpha=0.5)+
geom_smooth()+
scale_fill_manual(name='Period', values=c("darkgreen","red","orangered",
"orange", "purple","hotpink"))+
scale_y_continuous(limits = c(0,18000000), labels = scales::comma_format())+
#scale_y_continuous(labels = scales::comma_format())+
labs(title = "Employed",
x=expression(" "),
y="No. of Persons")+
facet_wrap(~Region)+
theme05+
guides(colour = guide_legend(nrow = 1, byrow = T, override.aes=list(size=2),
direction = "horizontal",
title.position = "top",
label.theme = element_text(angle = 0)))
emp1
# Setting up some global options for the knitr.
# General principle is that local options over-ride the global.
# More knitr options are available here: https://yihui.name/knitr/options/
knitr::opts_chunk$set(
#Chunk Code Options
echo = FALSE, # Show the code in the output
include = TRUE, # Show the results in the output.
results = 'asis',
comment = NA,
prompt = FALSE,
warning = FALSE,
message=FALSE,
#Display Options
cache = FALSE,
# Plot Options
fig.width = 6,
fig.height = 6,
fig.retina = 2,
fig.align = 'center'
)
options(dplyr.summarise.inform = FALSE)
options(digits = 4)
if (!require("readxl")) install.packages("readxl")
library(readxl)
if (!require("tidyverse")) install.packages("tidyverse")
library(tidyverse)
if (!require("dplyr")) install.packages("dplyr")
library(dplyr)
if (!require("plotly")) install.packages("plotly")
library(magrittr)
if (!require("lubridate")) install.packages("lubridate")
library(lubridate)
if (!require("ggplot2")) install.packages("ggplot2")
library(ggplot2)
if (!require("gridExtra")) install.packages("gridExtra")
library("gridExtra")
if (!require("grid"))install.packages("grid")
library("grid")
if (!require("flexdashboard")) install.packages("flexdashboard")
library(flexdashboard)
if (!require("DT")) install.packages("DT")
library(DT)
library(ggpubr)
library(cowplot)
getwd()
#load("R Assignment.RData")
path <- "C:/UNCG/IAF 605/Assignment/R Assignment/R Assignment.xlsx"
#accessing all the sheets
sheet <- excel_sheets("R Assignment.xlsx")
dataframe <-lapply(setNames(sheet, sheet),
function(x) read_excel("R Assignment.xlsx", sheet=x))
#names(dataframe)
# Combining Industrial columns into one column calle dsector and the corresponding number of persons employed as Employees
dataframe$US <-
dataframe$US %>%
gather(Sector, Employees, c("Construction", "Manufacturing",
"Retail", "L and H"), factor_key=TRUE)
dataframe$FL <-
dataframe$FL %>%
gather(Sector, Employees, c("Construction", "Manufacturing",
"Retail", "L and H"), factor_key=TRUE)%>%
gather(Status, Persons, c("Employed", "Unemployed"), factor_key=TRUE)
dataframe$TX <-
dataframe$TX %>%
gather(Sector, Employees, c("Construction", "Manufacturing",
"Retail", "L and H"), factor_key=TRUE)%>%
gather( Status, Persons, c("Employed", "Unemployed"), factor_key=TRUE)
dataframe$CA <-
dataframe$CA %>%
gather(Sector, Employees, c("Construction", "Manufacturing",
"Retail", "L and H"), factor_key=TRUE)%>%
gather(Status, Persons, c("Employed", "Unemployed"), factor_key=TRUE)
# Combining 4 different age groups into a column called 'Agegroup' and the corresponding participation rate as A-activity
# Men and Women columns combined into 'Gender' column and their corresponding values as 'G_Activity'
# Men and Women age group columns combined into G_Agegroup and their corresponding values into GA_Activity
dataframe$Lfpr <-
dataframe$Lfpr %>%
gather(Agegroup, A_Activity, c("16to19", "20to24", "25to54", "55andOver"),
factor_key=TRUE) %>%
gather(Gender, G_Activity, c("Women", "Men"), factor_key=TRUE)%>%
gather(G_Agegroup, GA_Activity,c("M_15to24","W_15to24","M_25to54", "W_25to54",
"M_55to64","W_55to64"),factor_key=TRUE)
#Combining 4 diffrent races into 'Race' column and their values into 'R_Activity'
dataframe$Race <-
dataframe$Race %>%
gather(Race, R_Activity,c("White", "AfricanAmerican", "Hispanic","Asian"),
factor_key=TRUE)
#### combining all dataframes into a single dataframe
original_data <- bind_rows(dataframe, .id="Sheet")
original_data$Date <- as.Date(original_data$Date)
# Splitting date into different time periods and then converting it into factors
# Extracting month and year from date
original_data <- original_data%>%
mutate(Month= strftime(Date, "%B"),
Year = strftime(Date, "%Y"),
Period = case_when(
between(as.Date(Date), as.Date('2004-01-01'),
as.Date("2007-11-01"))~"Pre-Recession",
between(as.Date(Date), as.Date("2007-12-01"),
as.Date("2009-07-01"))~ "Recession",
between(as.Date(Date), as.Date("2009-08-01"),
as.Date("2014-12-01"))~"Post Recession",
between(as.Date(Date), as.Date("2015-01-01"),
as.Date("2020-01-01"))~ "Pre-Pandemic",
between(as.Date(Date), as.Date("2020-02-01"),
as.Date("2020-05-01"))~"Pandemic",
between(as.Date(Date), as.Date("2020-06-01"),
as.Date("2022-12-01"))~ "Post Pandemic" ))
original_data$Period <-original_data$Period %>% as.factor()
data <-original_data
data
# Chunk 15
renderPlot({
RecessionData %>%
filter(Region ==input$StateSelected) %>%
filter(Period == input$PeriodSelected) %>%
ggplot(aes(x=Date, y = `UnempRate`))+
geom_col(aes(fill=`Period`) , alpha=0.6, position = "dodge")+
geom_path(size=2)+
geom_point(size=1)+
geom_smooth(alpha=0.3, size=2)+
scale_fill_brewer(palette="Paired")+
labs(
title = input$StateSelected,
subtitle = "Unemployment Rates (%)",
x= "Year",
y = "Rate(%)")+
theme(
plot.title =
element_text(margin = margin(t = 10, b = 10), size=18),
legend.position = 'top'
)
})
# Chunk 16
renderDT(
RecessionData %>%
select(Period, Region, Date,
'Rate(%)' = `UnempRate`) %>%
filter(Region ==input$StateSelected) %>%
filter(Period ==input$PeriodSelected)
)
# Chunk 17
renderPlot({
RecessionData %>%
filter(Region ==input$StateSelected) %>%
ggplot(aes(x=Date, y = `UnempRate`))+
geom_col(aes(fill=`Period`) , alpha=0.6, position = "dodge")+
geom_path(size=1)+
geom_point(size=2)+
geom_smooth(alpha=0.3, size=2)+
#geom_line(
#	aes( group = `Period`)
#arrow=arrow(ends = "both", type = "closed"))+
scale_fill_brewer(palette="Paired")+
labs(
title = input$StateSelected,
subtitle = "Unemployment Rates (%)",
x= "Year",
y = "Unemployment Rate(%)")+
theme(
plot.title =
element_text(margin = margin(t = 10, b = 10), size=18),
legend.position = 'top'
)
})
# Chunk 18
renderPlot({
RecessionData %>%
ggplot(aes(x=Date, y = `UnempRate`))+
geom_point(size=1)+
geom_smooth(aes(color=`Region`), alpha=0.3, size=2)+
scale_fill_brewer(palette="Paired")+
labs(
title = "Unemploymnet Rates",
subtitle = "Unemployment Rates (%)",
x= "Year",
y = "Unemployment Rate(%)")+
theme(
plot.title =
element_text(margin = margin(t = 10, b = 10), size=18),
legend.position = 'top'
)
})
# Chunk 19
```{r , construction,  message=FALSE, warning=FALSE, fig.height=8, fig.width=6, fig.align='center'}
PR <-
data %>%
filter(Region=="United States")%>%
group_by(Period,Year, Month) %>%
ggplot(aes(`Labour Force`, fill=Period))+
geom_histogram() +
geom_density()+
scale_fill_brewer(palette="Set1")+
scale_y_continuous()+
labs(
title = "Participation Rate ",
fill = "Time Period",
x="activity rate",
y = "density")+
theme03
library(flexdashboard)
if (!require("readxl")) install.packages("readxl")
library(readxl)
if (!require("tidyverse")) install.packages("tidyverse")
library(tidyverse)
if (!require("dplyr")) install.packages("dplyr")
library(dplyr)
if (!require("DT")) install.packages("DT")
library(DT)
if (!require("flexdashboard")) install.packages("flexdashboard")
library(flexdashboard)
if (!require("plotly")) install.packages("plotly")
library(plotly)
if (!require("lubridate")) install.packages("lubridate")
library(lubridate)
if (!require("ggplot2")) install.packages("ggplot2")
library(ggplot2)
if (!require("gridExtra")) install.packages("gridExtra")
library("gridExtra") # for grid.arrange ()
if (!require("grid"))install.packages("grid")
library("grid") # to use textGrob in annotate.fig(bottom =textGrob(), gp=gpar())
library(ggpubr)
library(cowplot)
theme03 <- theme(
plot.title = element_text(hjust = 0.5, size=12, face="bold"),
#axis.text.x = element_text(face="bold"),
axis.text.x= element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_text(face="bold"),
axis.ticks = element_blank(),
panel.background = element_rect(fill = '#F6E4D1', color = 'purple'),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
strip.background = element_blank(),
strip.text = element_text(face = "bold", size=9)
PRate_avg <-
theme03 <- theme(
plot.title = element_text(hjust = 0.5, size=12, face="bold"),
#axis.text.x = element_text(face="bold"),
axis.text.x= element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_text(face="bold"),
axis.ticks = element_blank(),
panel.background = element_rect(fill = '#F6E4D1', color = 'purple'),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
strip.background = element_blank(),
strip.text = element_text(face = "bold", size=9))
PRate_avg <-
data %>%
group_by(Region,Year, Period) %>%
summarise(AvgPRate = round(mean(`Labour Force`)))%>%
drop_na() %>%
ggplot(aes(Period,AvgPRate))+
geom_col(aes(fill=`Period`) ,  width = 0.8,alpha=0.6, position='dodge')+
#geom_smooth(alpha=0.3)+
geom_text(stat='identity', aes(label = AvgPRate+8), vjust = -5, hjust=1.0)+
scale_y_continuous(limits=c(0,80))+
labs(
title = "Average Participation Rate ",
fill = "Time Period",
x="Period",
y = "Rate in Percent")+
facet_grid(vars(Region))+
theme03
ggplotly(PRate_avg)
PR <-
data %>%
filter(Region=="United States")%>%
group_by(Period,Year, Month) %>%
ggplot(aes(`Labour Force`, fill=Period))+
geom_histogram() +
geom_density()+
scale_fill_brewer(palette="Set1")+
scale_y_continuous()+
labs(
title = "Participation Rate ",
fill = "Time Period",
x="activity rate",
y = "density")+
theme03
PR
theme03 <- theme(
plot.title = element_text(hjust = 0.5, size=12, face="bold"),
#axis.text.x = element_text(face="bold"),
axis.text.x= element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_text(face="bold"),
axis.ticks = element_blank(),
panel.background = element_rect(fill = '#F6E4D1', color = 'purple'),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
strip.background = element_blank(),
strip.text = element_text(face = "bold", size=9))
PRate_avg <-
data %>%
group_by(Region,Year, Period) %>%
summarise(AvgPRate = round(mean(`Labour Force`)))%>%
drop_na() %>%
ggplot(aes(Period,AvgPRate))+
geom_col(aes(fill=`Period`) ,  width = 0.8,alpha=0.6, position='dodge')+
#geom_smooth(alpha=0.3)+
geom_text(stat='identity', aes(label = AvgPRate+8), vjust = -5, hjust=1.0)+
scale_y_continuous(limits=c(0,80))+
labs(
title = "Average Participation Rate ",
fill = "Time Period",
x="Period",
y = "Rate in Percent")+
facet_grid(vars(Region))+
theme03
ggplotly(PRate_avg)
Lfpr <-
data %>%
filter(Period %in% c("Pandemic", "Recession") ) %>%
group_by(Region,Year, Period) %>%
summarise(AvgPRate = mean(`Labour Force`))%>%
drop_na() %>%
datatable(
colnames = c("Region","Year","Period", "AvgPRate"),
caption = htmltools::tags$caption(
style = 'caption-side: top;
text-align: center;',
htmltools::h2(' AveargeParticipation Rate By Region')),
options = list(pageLength = 8, scrollX=T))  %>%
formatRound('AvgPRate',digits = 2)
Lfpr
#getwd()
load("R Assignment.RData")
Lodds
Lodds
p_values <- c(0.0001, 0.0004, 0.0019, 0.0095, 0.0201, 0.0278, 0.0298,
0.0344, 0.0459, 0.3240, 0.4262, 0.5719, 0.6528, 0.7590, 1.000)
x <- 1-p_values/2
qnorm_x <- qnorm(x)
Lodds <- 1.86 * abs(qnorm_x) * exp(-(qnorm_x^2)/2)
Lodds
L_prior <- 1/(1+(1/Lodds))
L_prior
#
L_prior*10
qnorm
qnorm_x
